/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define CMK 0
#define SMK 1
#define QWT 2
#define LOWER 3
#define RAISE 4
#define ADJUST 5

&mt {
    quick-tap-ms = <150>;
};

/ {
    behaviors {
        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_ESCAPE";
            #binding-cells = <0>;
            bindings =
                <&mt LCTRL ESC>,
                <&kp GRAVE>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT|MOD_RGUI)>;
            keep-mods = <(MOD_LGUI|MOD_RSFT)>;
        };
        q_hold: q_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "Q_HOLD";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            global-quick-tap;
            flavor = "tap-preferred";
        };
        lh_hm: lh_hm {
            compatible = "zmk,behavior-hold-tap";
            label = "left_hand_homerow_mods";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            global-quick-tap;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 40 39 38 37 36>;
        };
        rh_hm: rh_hm {
            compatible = "zmk,behavior-hold-tap";
            label = "right_hand_homerow_mods";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            global-quick-tap;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 40 39>;
            hold-trigger-on-release;
        };
        smart_shft: smart_shft {
            compatible = "zmk,behavior-mod-morph";
            label = "SMART_SHFT";
            bindings =
                <&quick_sticky_key RSHFT>,
                <&caps_word>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };
        quick_sticky_key: quick_sticky_key {
            compatible = "zmk,behavior-sticky-key";
            label = "QUICK_STICKY_KEY";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <900>;
            quick-release;
        };
        quick_hold_tap: quick_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK_HOLD_TAP";
            bindings =
                <&quick_sticky_key>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <120>;
        };
        smart_shft_tap: smart_shft_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "SMART_SHFT_TAP";
            bindings =
                <&smart_shft>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <90>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  :  |   BKSP    |
            // | CTRL |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |    '      |
            // | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | SHFT(RET) |
            //              | LGUI   |  LWR/SPC  | RSE/ENT |   LSHFT/BKSP  | ALT |

            bindings = <
     &kp C_PP            &kp Q            &kp W            &kp F            &kp P                &kp B               &kp J                       &kp L           &kp U          &kp Y       &kp COMMA   &lt 7 BSPC
       &gresc   &lh_hm LCTRL A    &lh_hm LALT R   &lh_hm LSHFT S    &lh_hm LCMD T                &kp G               &kp M               &rh_hm RCMD N  &rh_hm RSHFT E  &rh_hm RALT I  &rh_hm RCTRL O     &kp SEMI
&mt LSHFT TAB  &q_hold LG(Z) Z  &q_hold LG(X) X  &q_hold LG(C) C  &q_hold LG(V) D  &q_hold LG(LS(Z)) V               &kp K                       &kp H         &kp SQT       &kp FSLH         &kp DOT  &smart_shft
                                                       &lt 6 TAB      &lt 4 SPACE                       &lt 5 ENTER         &quick_hold_tap RSHFT BSPC           &sl 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        dwarfq2_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  :  |   BKSP    |
            // | CTRL |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |    '      |
            // | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | SHFT(RET) |
            //              | LGUI   |  LWR/SPC  | RSE/ENT |   LSHFT/BKSP  | ALT |

            bindings = <
     &kp C_PP            &kp F            &kp L            &kp H            &kp D                &kp V               &kp Z                       &kp Y           &kp O          &kp U       &kp COMMA   &lt 7 BSPC
       &gresc   &lh_hm LCTRL S    &lh_hm LALT R   &lh_hm LSHFT N    &lh_hm LCMD T                &kp M               &kp G               &rh_hm RCMD C  &rh_hm RSHFT E  &rh_hm RALT I  &rh_hm RCTRL A     &kp SEMI
&mt LSHFT TAB  &q_hold LG(Z) J  &q_hold LG(X) X  &q_hold LG(C) B  &q_hold LG(V) K  &q_hold LS(LG(Z)) Q               &kp P                       &kp W         &kp SQT       &kp FSLH         &kp DOT  &smart_shft
                                                       &lt 6 TAB      &lt 4 SPACE                       &lt 5 ENTER         &quick_hold_tap RSHFT BSPC           &sl 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        qwerty_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  :  |   BKSP    |
            // | CTRL |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |    '      |
            // | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | SHFT(RET) |
            //              | LGUI   |  LWR/SPC  | RSE/ENT |   LSHFT/BKSP  | ALT |

            bindings = <
     &kp C_PP            &kp Q            &kp W            &kp E            &kp R                &kp T               &kp Y                       &kp U           &kp I          &kp O              &kp P   &lt 7 BSPC
       &gresc   &lh_hm LCTRL A    &lh_hm LALT S   &lh_hm LSHFT D    &lh_hm LCMD F                &kp G               &kp H               &rh_hm RCMD J  &rh_hm RSHFT K  &rh_hm RALT L  &rh_hm RCTRL SEMI      &kp SQT
&mt LSHFT TAB  &q_hold LG(Z) Z  &q_hold LG(X) X  &q_hold LG(C) C  &q_hold LG(V) V  &q_hold LS(LG(Z)) B               &kp N                       &kp M       &kp COMMA        &kp DOT           &kp FSLH  &smart_shft
                                                       &lt 6 TAB      &lt 4 SPACE                       &lt 5 ENTER         &quick_hold_tap RSHFT BSPC           &sl 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        sym_layer {
            // ----------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |    DEL    |
            // |    |  =  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |     ~     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(RET) |
            //                       |     |     | RET | ADJ |     |

            bindings = <
&kp C_MUTE   &kp EXCL     &kp AT   &kp HASH   &kp DLLR  &kp PRCNT         &none     &none      &none     &none      &none  &to 5
     &to 0   &kp AMPS  &kp COLON   &kp LPAR   &kp LBRC   &kp LBKT         &none  &sk RCMD  &sk RSHFT  &sk RALT  &sk RCTRL  &none
 &kp GRAVE  &kp CARET   &kp BSLH   &kp RPAR   &kp RBRC   &kp RBKT         &none     &none      &none     &none      &none  &none
                                  &kp EQUAL  &kp MINUS             &mo 7         &kp BSPC    &kp DOT
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_UP C_BRI_DN>;
        };

        num_layer {
            // ----------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |    DEL    |
            // |    |  =  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |     ~     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(RET) |
            //                       |     |     | RET | ADJ |     |

            bindings = <
&kp C_MUTE      &none     &none      &none     &none  &none          &kp FSLH    &kp N7   &kp N8  &kp N9  &kp MINUS  &to 5
     &to 0  &sk LCTRL  &sk LALT  &sk LSHFT  &sk LCMD  &none         &kp ASTRK    &kp N4   &kp N5  &kp N6   &kp PLUS  &none
     &none      &none     &none      &none     &none  &none            &kp N0    &kp N1   &kp N2  &kp N3  &kp EQUAL  &none
                                   &kp TAB     &none         &mo 7             &kp BSPC  &kp DOT
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_UP C_BRI_DN>;
        };

        nav_layer {
            // -----------------------------------------------------------------------------------------
            // |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
            // |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
            //                       |     | ADJ | BKSP |    |     |

            bindings = <
&none      &none  &kp LG(W)      &none  &kp LS(LG(N4))  &kp LS(LG(N5))           &kp LA(UP)  &kp LA(LEFT)     &kp UP  &kp LA(RIGHT)  &kp LA(BSPC)  &to 5
&to 0  &sk LCTRL   &sk LALT  &sk LSHFT        &sk LCMD        &kp CAPS         &kp LA(DOWN)      &kp LEFT   &kp DOWN      &kp RIGHT      &kp BSPC  &none
&none  &kp LG(Z)  &kp LG(X)  &kp LG(C)       &kp LG(V)   &kp LS(LG(Z))              &kp DEL  &kp LG(LEFT)  &kp LG(A)  &kp LG(RIGHT)  &kp LG(BSPC)  &none
                                 &none           &mo 7                  &none                    &kp BSPC      &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        fun_layer {
            bindings = <
&none      &none      &none      &none  &kp LS(LG(N4))  &kp LS(LG(N5))             &kp F12  &kp F7  &kp F8  &kp F9  &none  &none
&to 0  &sk LCTRL   &sk LALT  &sk LSHFT        &sk LCMD           &none             &kp F11  &kp F4  &kp F5  &kp F6  &none  &none
&none  &kp LG(Z)  &kp LG(X)  &kp LG(C)       &kp LG(V)   &kp LG(LS(Z))             &kp F10  &kp F1  &kp F2  &kp F3  &none  &none
                                 &none       &kp SPACE                  &kp ENTER            &none   &none
            >;
        };

        sys_layer {
            // -----------------------------------------------------------------------------------------
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
            // |          |          |          |          |    |         |   |       |     |     |     |     |        |
            //                                              |     |     |     |     |     |

            bindings = <
&none  &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF  &rgb_ug RGB_TOG         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR  &trans
&to 0  &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR            &none                &none         &none         &none         &none       &none   &none
&none           &tog 1           &tog 2            &none     &out OUT_USB     &out OUT_BLE          &bootloader         &none         &none         &none       &none   &none
                                                  &trans            &to 4                   &to 5                      &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_UP C_BRI_DN>;
        };
    };
};
