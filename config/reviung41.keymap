/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define CMK 0
#define SMK 1
#define QWT 2
#define LOWER 3
#define RAISE 4
#define ADJUST 5

&mt {
    quick-tap-ms = <150>;
};

/ {
    behaviors {
        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_ESCAPE";
            #binding-cells = <0>;
            bindings =
                <&mt LCTRL ESC>,
                <&kp GRAVE>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT|MOD_RGUI)>;
            keep-mods = <(MOD_LGUI|MOD_RSFT)>;
        };
        q_hold: q_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "Q_HOLD";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            global-quick-tap;
            flavor = "tap-preferred";
        };
        first_tab: first_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "FIRST_TAB";
            bindings =
                <&kp Q>,
                <&kp NUMBER_1>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LGUI)>;
        };
        second_tab: second_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "SECOND_TAB";
            bindings =
                <&q_hold LG(W) W>,
                <&kp NUMBER_2>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LGUI)>;
        };
        third_tab: third_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "THIRD_TAB";
            bindings =
                <&q_hold LG(F) F>,
                <&kp NUMBER_3>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LGUI)>;
        };
        fourth_tab: fourth_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "FOURTH_TAB";
            bindings =
                <&q_hold LS(LG(NUMBER_4)) P>,
                <&kp NUMBER_4>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LGUI)>;
        };
        last_tab: last_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "LAST_TAB";
            bindings =
                <&q_hold LG(LS(NUMBER_5)) B>,
                <&kp NUMBER_9>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LGUI)>;
        };
        raycast: raycast {
            compatible = "zmk,behavior-mod-morph";
            label = "RAYCAST";
            bindings =
                <&lt 4 ENTER>,
                <&kp SPACE>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI|MOD_RALT)>;
            keep-mods = <(MOD_LGUI|MOD_RALT)>;
        };
        q_mt_a: q_mt_a {
            compatible = "zmk,behavior-hold-tap";
            label = "mt for alpha";
            bindings =
                <&mo>,
                <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            global-quick-tap;
            tapping-term-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  :  |   BKSP    |
            // | CTRL |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |    '      |
            // | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | SHFT(RET) |
            //              | LGUI   |  LWR/SPC  | RSE/ENT |   LSHFT/BKSP  | ALT |

            bindings = <
     &kp C_PP            &kp Q            &kp W            &kp F            &kp P        &kp B               &kp J           &kp L           &kp U    &kp Y  &kp SEMI  &lt 6 MINUS
       &gresc            &kp A            &kp R            &kp S            &kp T        &kp G               &kp M           &kp N           &kp E    &kp I     &kp O      &kp SQT
&mt LSHFT TAB  &q_hold LG(Z) Z  &q_hold LG(X) X  &q_hold LG(C) C  &q_hold LG(V) D  &q_mt_a 5 V               &kp K           &kp H       &kp COMMA  &kp DOT  &kp FSLH     &kp RCMD
                                                  &mt LGUI MINUS      &lt 3 SPACE               &lt 4 ENTER         &mt RSHFT BSPC  &mt RALT EQUAL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        nerts_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  :  |   BKSP    |
            // | CTRL |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |    '      |
            // | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | SHFT(RET) |
            //              | LGUI   |  LWR/SPC  | RSE/ENT |   LSHFT/BKSP  | ALT |

            bindings = <
     &kp C_PP            &kp P            &kp L            &kp D            &kp G        &kp V               &kp Z           &kp K           &kp O      &kp U  &kp FSLH  &lt 6 MINUS
       &gresc            &kp N            &kp R            &kp T            &kp S        &kp W               &kp Y           &kp H           &kp E      &kp I     &kp A     &kp SEMI
&mt LSHFT TAB  &q_hold LG(Z) Q  &q_hold LG(X) J  &q_hold LG(C) M  &q_hold LG(V) C  &q_mt_a 5 X               &kp B           &kp F         &kp SQT  &kp COMMA   &kp DOT     &kp RCMD
                                                  &mt LGUI MINUS      &lt 3 SPACE               &lt 4 ENTER         &mt RSHFT BSPC  &mt RALT EQUAL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        qwerty_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  :  |   BKSP    |
            // | CTRL |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |    '      |
            // | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | SHFT(RET) |
            //              | LGUI   |  LWR/SPC  | RSE/ENT |   LSHFT/BKSP  | ALT |

            bindings = <
     &kp C_PP            &kp Q            &kp W            &kp E            &kp R        &kp T               &kp Y           &kp U           &kp I    &kp O     &kp P  &lt 6 MINUS
       &gresc            &kp A            &kp S            &kp D            &kp F        &kp G               &kp H           &kp J           &kp K    &kp L  &kp SEMI      &kp SQT
&mt LSHFT TAB  &q_hold LG(Z) Z  &q_hold LG(X) X  &q_hold LG(C) C  &q_hold LG(V) V  &q_mt_a 5 B               &kp N           &kp M       &kp COMMA  &kp DOT  &kp FSLH     &kp RGUI
                                                  &mt LGUI MINUS      &lt 3 SPACE               &lt 4 ENTER         &mt RSHFT BSPC  &mt RALT EQUAL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ----------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |    DEL    |
            // |    |  =  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |     ~     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(RET) |
            //                       |     |     | RET | ADJ |     |

            bindings = <
   &kp C_MUTE   &kp EXCL     &kp AT  &kp HASH  &kp DLLR  &kp PRCNT                  &kp FSLH  &kp N7   &kp N8  &kp N9  &kp MINUS     &to 4
        &to 0   &kp AMPS  &kp COLON  &kp LPAR  &kp LBRC   &kp LBKT                 &kp ASTRK  &kp N4   &kp N5  &kp N6   &kp PLUS  &kp PIPE
&kp LG(GRAVE)  &kp CARET  &kp UNDER  &kp RPAR  &kp RBRC   &kp RBKT                    &kp N0  &kp N1   &kp N2  &kp N3   &kp BSLH  &kp RCMD
                                       &trans    &trans             &kp LA(SPACE)             &trans  &kp DOT
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_UP C_BRI_DN>;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
            // |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
            //                       |     | ADJ | BKSP |    |     |

            bindings = <
&trans      &none  &kp LG(W)      &none  &kp LS(LG(N4))  &kp LS(LG(N5))            &kp LA(UP)  &kp LA(LEFT)    &kp UP  &kp LA(RIGHT)  &kp LA(BSPC)   &to 3
 &to 0  &kp LG(A)  &kp LSHFT  &kp LCTRL        &kp LALT        &kp CLCK          &kp LA(DOWN)      &kp LEFT  &kp DOWN      &kp RIGHT      &kp BSPC  &trans
&trans  &kp LG(Z)  &kp LG(X)  &kp LG(C)       &kp LG(V)   &kp LS(LG(Z))               &kp DEL  &kp LG(LEFT)     &none  &kp LG(RIGHT)  &kp LG(BSPC)  &trans
                                 &trans           &mo 6                  &trans                      &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        function_layer {
            bindings = <
&none  &none  &none  &none  &kp LS(LG(N4))  &kp LS(LG(N5))          &none   &none   &none    &none    &none    &none
&to 0  &none  &none  &none           &none           &none         &kp F1  &kp F2  &kp F3   &kp F4   &kp F5   &kp F6
&none  &none  &none  &none           &none           &none         &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
                     &none           &none                  &none           &none   &none
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
            // |          |          |          |          |    |         |   |       |     |     |     |     |        |
            //                                              |     |     |     |     |     |

            bindings = <
&none  &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF  &rgb_ug RGB_TOG         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR  &trans
&to 0  &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR            &none                &none         &none         &none         &none       &none   &none
&none            &none           &tog 1           &tog 2     &out OUT_USB     &out OUT_BLE                &none         &none         &none         &none       &none   &none
                                                  &trans            &to 3                   &to 4                      &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_UP C_BRI_DN>;
        };
    };
};
