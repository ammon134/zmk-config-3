/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define CMK 0
#define SMK 1
#define QWT 2
#define LOWER 3
#define RAISE 4
#define ADJUST 5

&mt {
    quick-tap-ms = <150>;
};

&sl {
    /delete-property/ quick-release;
};

/ {
    behaviors {
        q_hold: q_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "Q_HOLD";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            global-quick-tap;
            flavor = "tap-preferred";
        };
        lh_hm: lh_hm {
            compatible = "zmk,behavior-hold-tap";
            label = "left_hand_homerow_mods";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            global-quick-tap;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 40 39 38 37 36>;
        };
        rh_hm: rh_hm {
            compatible = "zmk,behavior-hold-tap";
            label = "right_hand_homerow_mods";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            global-quick-tap;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 40 39>;
            hold-trigger-on-release;
        };
        smart_shft: smart_shft {
            compatible = "zmk,behavior-mod-morph";
            label = "SMART_SHFT";
            bindings =
                <&quick_sticky_key LSHFT>,
                <&caps_word>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
        quick_sticky_key: quick_sticky_key {
            compatible = "zmk,behavior-sticky-key";
            label = "QUICK_STICKY_KEY";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <900>;
            quick-release;
        };
        quick_hold_tap: quick_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK_HOLD_TAP";
            bindings =
                <&quick_sticky_key>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <120>;
            flavor = "balanced";
        };
        smart_shft_tap: smart_shft_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "SMART_SHFT_TAP";
            bindings =
                <&smart_shft>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <90>;
        };
        comma_semi: comma_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_SEMI";
            bindings =
                <&kp COMMA>,
                <&kp SEMI>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };
        bspc_smart_shft: bspc_smart_shft {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_SMART_SHFT";
            bindings =
                <&quick_hold_tap RSHFT BSPC>,
                <&caps_word>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
        lh_lt: lh_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "left_hand_layer_tap";
            bindings =
                <&mo>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 36 37 38>;
            hold-trigger-on-release;
            global-quick-tap;
        };
        rh_lt: rh_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "right_hand_layer_tap";
            bindings =
                <&mo>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            global-quick-tap;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40>;
            hold-trigger-on-release;
        };
        grave_escape: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_ESCAPE";
            bindings =
                <&kp ESC>,
                <&kp GRAVE>;

            #binding-cells = <0>;
            keep-mods = <(MOD_LGUI|MOD_LCTL)>;
            mods = <(MOD_LGUI|MOD_RGUI|MOD_LCTL|MOD_LSFT|MOD_RALT|MOD_RSFT|MOD_LALT)>;
        };
    };

    macros {
        up_dir: up_dir {
            compatible = "zmk,behavior-macro";
            label = "UP_DIR";
            #binding-cells = <0>;
            bindings = <&none &kp DOT &kp DOT &kp FSLH>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  :  |   BKSP    |
            // | CTRL |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |    '      |
            // | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | SHFT(RET) |
            //              | LGUI   |  LWR/SPC  | RSE/ENT |   LSHFT/BKSP  | ALT |

            bindings = <
     &kp C_PP           &kp Q          &kp W           &kp F          &kp P  &kp B               &kp J                       &kp L           &kp U          &kp Y     &comma_semi   &lt 9 BSPC
&grave_escape  &lh_hm LCTRL A  &lh_hm LALT R  &lh_hm LSHFT S  &lh_hm LCMD T  &kp G               &kp M               &rh_hm RCMD N  &rh_hm RSHFT E  &rh_hm RALT I  &rh_hm RCTRL O  &key_repeat
        &mo 8           &kp Z          &kp X      &lh_lt 6 C          &kp D  &kp V               &kp K                       &kp H         &kp SQT       &kp FSLH         &kp DOT  &smart_shft
                                                   &lt 8 TAB    &lt 7 SPACE         &lt 5 ENTER         &quick_hold_tap LSHFT BSPC           &sl 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        whorfv_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  :  |   BKSP    |
            // | CTRL |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |    '      |
            // | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | SHFT(RET) |
            //              | LGUI   |  LWR/SPC  | RSE/ENT |   LSHFT/BKSP  | ALT |

            bindings = <
     &kp C_PP           &kp F          &kp L           &kp H          &kp K  &kp Q               &kp Z                       &kp Y           &kp O          &kp U     &comma_semi   &lt 9 BSPC
&grave_escape  &lh_hm LCTRL S  &lh_hm LALT R  &lh_hm LSHFT N  &lh_hm LCMD T  &kp M               &kp G               &rh_hm RCMD W  &rh_hm RSHFT A  &rh_hm RALT E  &rh_hm RCTRL I  &key_repeat
&mt LSHFT TAB           &kp J          &kp X      &lh_lt 6 B          &kp D  &kp V               &kp P                       &kp C         &kp SQT       &kp FSLH         &kp DOT  &smart_shft
                                                   &lt 8 TAB    &lt 7 SPACE         &lt 5 ENTER         &quick_hold_tap LSHFT BSPC           &sl 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        gallium_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  :  |   BKSP    |
            // | CTRL |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |    '      |
            // | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | SHFT(RET) |
            //              | LGUI   |  LWR/SPC  | RSE/ENT |   LSHFT/BKSP  | ALT |

            bindings = <
     &kp C_PP           &kp B          &kp L           &kp D          &kp C  &kp V               &kp Z                       &kp Y           &kp O          &kp U       &kp COMMA   &lt 8 BSPC
&grave_escape  &lh_hm LCTRL N  &lh_hm LALT R  &lh_hm LSHFT T  &lh_hm LCMD S  &kp G               &kp P               &rh_hm RCMD H  &rh_hm RSHFT A  &rh_hm RALT E  &rh_hm RCTRL I  &key_repeat
&mt LSHFT TAB           &kp Q          &kp X      &lh_lt 6 M          &kp W  &kp J               &kp K                       &kp F         &kp SQT       &kp FSLH         &kp DOT  &smart_shft
                                                   &lt 8 TAB    &lt 7 SPACE         &lt 5 ENTER         &quick_hold_tap LSHFT BSPC           &sl 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        qwerty_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  :  |   BKSP    |
            // | CTRL |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |    '      |
            // | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | SHFT(RET) |
            //              | LGUI   |  LWR/SPC  | RSE/ENT |   LSHFT/BKSP  | ALT |

            bindings = <
     &kp C_PP           &kp Q          &kp W           &kp E          &kp R  &kp T               &kp Y                       &kp U           &kp I          &kp O              &kp P   &lt 9 BSPC
&grave_escape  &lh_hm LCTRL A  &lh_hm LALT S  &lh_hm LSHFT D  &lh_hm LCMD F  &kp G               &kp H               &rh_hm RCMD J  &rh_hm RSHFT K  &rh_hm RALT L  &rh_hm RCTRL SEMI      &kp SQT
&mt LSHFT TAB           &kp Z          &kp X           &kp C          &kp V  &kp B               &kp N                       &kp M       &kp COMMA        &kp DOT           &kp FSLH  &smart_shft
                                                   &lt 8 TAB    &lt 7 SPACE         &lt 5 ENTER         &quick_hold_tap LSHFT BSPC           &sl 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        sym_layer {
            // ----------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |    DEL    |
            // |    |  =  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |     ~     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(RET) |
            //                       |     |     | RET | ADJ |     |

            bindings = <
&kp C_MUTE   &kp EXCL     &kp AT   &kp HASH   &kp DLLR  &kp PRCNT         &none     &none      &none     &none      &none  &to 7
 &kp TILDE   &kp AMPS  &kp COLON  &kp MINUS   &kp LPAR   &kp LBKT         &none  &sk RCMD  &sk RSHFT  &sk RALT  &sk RCTRL  &none
  &kp PIPE  &kp CARET   &kp BSLH  &kp EQUAL   &kp RPAR   &kp RBKT         &none     &none      &none     &none      &none  &none
                                      &none  &kp SPACE             &none         &kp BSPC      &none
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_UP C_BRI_DN>;
        };

        code_sym_layer {
            bindings = <
&none     &kp AT   &kp PIPE   &kp DLLR   &kp LBRC  &kp RBRC            &none     &kp LT  &kp UNDER     &kp GT   &kp SEMI  &none
&none  &kp PRCNT   &kp AMPS  &kp COLON   &kp LPAR  &kp RPAR         &kp HASH  &kp EQUAL  &kp MINUS   &kp PLUS   &kp EXCL  &none
&none  &kp GRAVE  &kp TILDE  &kp CARET   &kp LBKT  &kp RBKT          &up_dir  &kp UNDER   &kp FSLH  &kp ASTRK  &kp CARET  &none
                                 &none  &kp SPACE            &none             &kp BSPC      &none
            >;
        };

        num2_layer {
            bindings = <
&none      &none     &none      &none     &none  &none             &kp COLON    &kp N7  &kp N8  &kp N9  &kp ASTRK  &kp BSPC
&to 0  &sk LCTRL  &sk LALT  &sk LSHFT  &sk LCMD  &none                &kp N0    &kp N1  &kp N2  &kp N3   &kp FSLH     &none
&none      &none     &none      &none     &none  &none               &kp DOT    &kp N4  &kp N5  &kp N6  &kp EQUAL     &none
                            &kp MINUS  &kp PLUS         &kp ENTER             &kp BSPC   &none
            >;
        };

        nav_layer {
            // -----------------------------------------------------------------------------------------
            // |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
            // |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
            //                       |     | ADJ | BKSP |    |     |

            bindings = <
&none      &none      &none      &none  &kp LS(LG(N4))  &kp LS(LG(N5))               &kp LA(UP)  &kp LA(LEFT)     &kp UP  &kp LA(RIGHT)  &kp LA(BSPC)  &to 7
&to 0  &sk LCTRL   &sk LALT  &sk LSHFT        &sk LCMD        &kp CAPS             &kp LA(DOWN)      &kp LEFT   &kp DOWN      &kp RIGHT      &kp BSPC  &none
&none  &kp LG(Z)  &kp LG(X)  &kp LG(C)       &kp LG(V)   &kp LS(LG(Z))                  &kp DEL  &kp LG(LEFT)  &kp LG(A)  &kp LG(RIGHT)  &kp LG(BSPC)  &none
                                 &none           &none                  &kp ENTER                    &kp BSPC      &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        fun_layer {
            bindings = <
        &none  &kp LG(TAB)  &kp LG(W)      &none  &kp LS(LG(N4))  &kp LS(LG(N5))         &kp F12  &kp F7  &kp F8  &kp F9  &kp LG(LBKT)  &kp LG(RBKT)
&kp LG(GRAVE)    &kp LG(A)      &none      &none           &none           &none         &kp F11  &kp F4  &kp F5  &kp F6         &none  &kp LG(BSLH)
        &none    &kp LG(Z)  &kp LG(X)  &kp LG(C)       &kp LG(V)   &kp LG(LS(Z))         &kp F10  &kp F1  &kp F2  &kp F3         &none         &none
                                           &none           &none                  &none            &none   &mo 9
            >;
        };

        sys_layer {
            // -----------------------------------------------------------------------------------------
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
            // |          |          |          |          |    |         |   |       |     |     |     |     |        |
            //                                              |     |     |     |     |     |

            bindings = <
&none  &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF  &rgb_ug RGB_TOG         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR  &none
&to 0  &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR            &none                &none         &none         &none         &none       &none  &none
&none           &tog 1           &tog 2           &tog 3     &out OUT_USB     &out OUT_BLE          &bootloader         &none         &none         &none       &none  &none
                                                   &none            &none                   &none                       &none         &none
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_UP C_BRI_DN>;
        };
    };
};
