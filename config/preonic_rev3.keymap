/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2

/ {
    chosen {
        zmk,matrix_transform = &layout_grid_transform;
    };

    behaviors {
        lh_hm: lh_hm {
            compatible = "zmk,behavior-hold-tap";
            label = "left_hand_homerow_mods";
            bindings =
                <&sk>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            global-quick-tap;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 40 39 38 37 36>;
        };
        rh_hm: rh_hm {
            compatible = "zmk,behavior-hold-tap";
            label = "right_hand_homerow_mods";
            bindings =
                <&sk>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            global-quick-tap;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 40 39>;
            hold-trigger-on-release;
        };
        smart_shft: smart_shft {
            compatible = "zmk,behavior-mod-morph";
            label = "SMART_SHFT";
            bindings =
                <&quick_sticky_key RSHFT>,
                <&caps_word>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };
        quick_sticky_key: quick_sticky_key {
            compatible = "zmk,behavior-sticky-key";
            label = "QUICK_STICKY_KEY";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <900>;
            quick-release;
        };
        quick_hold_tap: quick_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK_HOLD_TAP";
            bindings =
                <&quick_sticky_key>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <120>;
        };
        smart_shft_tap: smart_shft_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "SMART_SHFT_TAP";
            bindings =
                <&smart_shft>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <90>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemakDH_hrm {
            bindings = <
&kp GRAVE       &kp N1         &kp N2          &kp N3         &kp N4     &kp N5       &kp N6       &kp N7      &kp N8         &kp N9          &kp N0         &kp BSPC
&kp Q           &kp W          &kp F           &kp P          &kp B      &kp DOWN     &kp UP       &kp J       &kp L          &kp U           &kp Y          &kp COMMA
&lh_hm LCTRL A  &lh_hm LALT R  &lh_hm LSHFT S  &lh_hm LCMD T  &kp G      &kp LEFT     &kp RIGHT    &kp M       &rh_hm RCMD N  &rh_hm RSHFT E  &rh_hm RALT I  &rh_hm RCTRL O
&kp Z           &kp X          &kp C           &kp D          &kp V      &kp MINUS    &kp EQUAL    &kp K       &kp H          &kp SQT         &kp FSLH       &kp DOT
&none           &none          &lt 6 ESC       &lt 4 SPACE    &lt 5 TAB  &lt 5 ENTER  &lt 5 ENTER  &lt 3 BSPC  &smart_shft    &lt 7 DEL       &none          &none
            >;

            label = "colemakDH";
        };

        whorfv_layer {
            bindings = <
&kp GRAVE       &kp N1         &kp N2          &kp N3         &kp N4   &kp N5       &kp N6       &kp N7      &kp N8         &kp N9          &kp N0         &kp BSPC
&kp F           &kp L          &kp H           &kp K          &kp Q    &kp DOWN     &kp UP       &kp Z       &kp Y          &kp O           &kp U          &kp COMMA
&lh_hm LCTRL S  &lh_hm LALT R  &lh_hm LSHFT N  &lh_hm LCMD T  &kp M    &kp LEFT     &kp RIGHT    &kp G       &rh_hm RCMD W  &rh_hm RSHFT A  &rh_hm RALT E  &rh_hm RCTRL I
&kp J           &kp X          &kp B           &kp D          &kp V    &kp MINUS    &kp EQUAL    &kp P       &kp C          &kp SQT         &kp FSLH       &kp DOT
&none           &none          &lt 6 ESC       &lt 4 SPACE    &kp TAB  &lt 5 ENTER  &lt 5 ENTER  &lt 3 BSPC  &smart_shft    &lt 3 DEL       &none          &none
            >;

            label = "WhrfV";
        };

        qwerty {
            //  -------------------------------------------------------------------------------------------------
            // |  GRAV |  1   |  2   |  3   |  4    |  5     |   6     |  7     |  8   |  9    |   0   | BSPC   |
            // |  TAB  |  Q   |  W   |  E   |  R    |  T     |   Y     |  U     |  I   |  O    |   P   | DEL    |
            // |  ESC  |  A   |  S   |  D   |  F    |  G     |   H     |  J     |  K   |  L    |   ;   |  '     |
            // | SHIFT |  Z   |  X   |  C   |  V    |  B     |   N     |  M     |  ,   |  .    |   /   | RET    |
            // |       | LGUI | LALT | LCTL | LOWER | SPACE  |  SPACE  |  RAISE | LEFT |  DOWN |   UP  | RIGHT  |

            bindings = <
&kp GRAVE       &kp N1         &kp N2          &kp N3         &kp N4   &kp N5       &kp N6       &kp N7      &kp N8         &kp N9          &kp N0         &kp BSPC
&kp Q           &kp W          &kp E           &kp R          &kp T    &kp DOWN     &kp UP       &kp Y       &kp U          &kp I           &kp O          &kp P
&lh_hm LCTRL A  &lh_hm LALT S  &lh_hm LSHFT D  &lh_hm LCMD F  &kp G    &kp LEFT     &kp RIGHT    &kp H       &rh_hm RCMD J  &rh_hm RSHFT K  &rh_hm RALT L  &rh_hm RCTRL SEMI
&kp Z           &kp X          &kp C           &kp V          &kp B    &kp MINUS    &kp EQUAL    &kp N       &kp M          &kp COMMA       &kp DOT        &kp FSLH
&none           &none          &lt 6 ESC       &lt 4 SPACE    &kp TAB  &lt 5 ENTER  &lt 5 ENTER  &lt 3 BSPC  &smart_shft    &lt 3 DEL       &none          &none
            >;
        };

        sym_layer {
            // ------------------------------------------------------------------------------------------
            // |   ~   |  !   |  @   |  #   |  $   |  %   |   ^   |   &   |   *  |  (   |   )   | BSPC  |
            // |   ~   |  !   |  @   |  #   |  $   |  %   |   ^   |   &   |   *  |  (   |   )   | DEL   |
            // |  DEL  |  F1  |  F2  |  F3  |  F4  |  F5  |  F6   |   -   |   +  |  [   |   ]   |  |    |
            // |       |  F7  |  F8  |  F9  |  F10 |  F11 |  F12  |       | LCTL | HOME |  END  |       |
            // | LALT  |      |      |      |      |      |       |       | NEXT | VOL- | VOL+  | PLAY  |

            bindings = <
&kp TILDE  &kp F1     &kp F2     &kp F3    &kp F4     &kp F5    &kp F6   &kp F7  &kp F8    &kp F9     &kp F10   &kp BSPC
&kp EXCL   &kp AT     &kp POUND  &kp DLLR  &kp PRCNT  &kp F11   &kp F12  &none   &none     &none      &none     &none
&kp AMPS   &kp COLON  &kp LPAR   &kp LBRC  &kp LBKT   &kp PIPE  &none    &none   &sk RCMD  &sk RSHFT  &sk RALT  &sk RCTRL
&kp CARET  &kp UNDER  &kp RPAR   &kp RBRC  &kp RBKT   &kp BSLH  &none    &none   &none     &none      &none     &none
&none      &none      &to 0      &none     &trans     &none     &none    &none   &none     &none      &none     &none
            >;
        };

        num_layer {
            // ------------------------------------------------------------------------------------------
            // |   ~   |  !   |  @   |  #   |  $   |  %   |   ^   |   &   |   *  |  (   |   )   | BSPC  |
            // |   ~   |  !   |  @   |  #   |  $   |  %   |   ^   |   &   |   *  |  (   |   )   | DEL   |
            // |  DEL  |  F1  |  F2  |  F3  |  F4  |  F5  |  F6   |   -   |   +  |  [   |   ]   |  |    |
            // |       |  F7  |  F8  |  F9  |  F10 |  F11 |  F12  |       | LCTL | HOME |  END  |       |
            // | LALT  |      |      |      |      |      |       |       | NEXT | VOL- | VOL+  | PLAY  |

            bindings = <
&kp TILDE  &kp F1     &kp F2     &kp F3    &kp F4     &kp F5    &kp F6    &kp F7     &kp F8        &kp F9   &kp F10  &kp BSPC
&kp EXCL   &kp AT     &kp POUND  &kp DLLR  &kp PRCNT  &kp F11   &kp F12   &kp FSLH   &kp N7        &kp N8   &kp N9   &kp MINUS
&kp AMPS   &kp COLON  &kp LPAR   &kp LBRC  &kp LBKT   &kp SEMI  &kp PIPE  &kp ASTRK  &kp N4        &kp N5   &kp N6   &kp PLUS
&kp CARET  &kp UNDER  &kp RPAR   &kp RBRC  &kp RBKT   &none     &kp BSLH  &kp COMMA  &kp N1        &kp N2   &kp N3   &kp EQUAL
&none      &none      &to 0      &none     &trans     &none     &none     &kp BSPC   &kp NUMBER_0  &kp DOT  &none    &none
            >;
        };

        nav_layer {
            bindings = <
&none      &none      &none      &none      &none          &none      &none      &none         &none         &none     &none          &none
&none      &none      &none      &none      &none          &none      &none      &kp LA(UP)    &kp LA(LEFT)  &kp UP    &kp LA(RIGHT)  &kp LA(BSPC)
&kp LG(A)  &sk LCTRL  &sk LSHFT  &sk LCMD   &kp CAPS       &none      &none      &kp LA(DOWN)  &kp LEFT      &kp DOWN  &kp RIGHT      &kp BSPC
&kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LG(LS(Z))  &none      &none      &kp DEL       &kp LG(LEFT)  &none     &kp LG(RIGHT)  &kp LG(BSPC)
&none      &none      &to 0      &none      &none          &kp ENTER  &kp ENTER  &kp BSPC      &none         &none     &none          &none
            >;
        };

        fun_layer {
            bindings = <
&none      &none      &none      &none                 &none                 &none         &none         &none    &none   &none   &none   &none
&none      &none      &none      &kp LG(LS(NUMBER_4))  &kp LG(LS(NUMBER_5))  &kp C_VOL_DN  &kp C_VOL_UP  &kp F12  &kp F7  &kp F8  &kp F9  &none
&sk LCTRL  &sk LALT   &sk LSHFT  &sk LCMD              &none                 &kp K_MUTE    &kp C_PP      &kp F11  &kp F1  &kp F2  &kp F3  &none
&kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)             &kp LG(LS(Z))         &kp C_BRI_DN  &kp C_BRI_UP  &kp F10  &kp F4  &kp F5  &kp F6  &none
&none      &none      &none      &none                 &none                 &none         &none         &none    &none   &mo 7   &none   &none
            >;

            label = "Fun";
        };

        sys_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans           &trans           &trans           &trans       &trans      &trans  &trans  &trans
&trans  &trans  &trans  &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &trans       &trans      &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans           &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &trans       &trans      &trans  &trans  &trans
&tog 1  &tog 2  &trans  &trans  &trans           &trans           &trans           &bootloader  &sys_reset  &trans  &trans  &trans
&trans  &trans  &to 0   &trans  &trans           &trans           &trans           &trans       &trans      &trans  &trans  &trans
            >;
        };
    };
};
